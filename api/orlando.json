release_info = [{'cls': 'session', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'auth', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'subject', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'role', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'task', 'obj_changes': [], 'field_changes': [["Published", "subtasks", "List pointing to all the substasks."], ["Published", "subtask_of", "Ref pointing to the task this is a substask of."]], 'msg_changes': []}, {'cls': 'event', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'pool', 'obj_changes': [], 'field_changes': [["Published", "gui_config", "gui-specific configuration for pool"], ["Published", "tags", "user-specified tags for categorization purposes"], ["Published", "blobs", "Binary blobs associated with this pool"], ["Published", "ha_overcommitted", "True if the Pool is considered to be overcommitted i.e. if there exist insufficient physical resources to tolerate the configured number of host failures"], ["Published", "ha_allow_overcommit", "If set to false then operations which would cause the Pool to become overcommitted will be blocked."], ["Published", "ha_plan_exists_for", "Number of future host failures we have managed to find a plan for. Once this reaches zero any future host failures will cause the failure of protected VMs."], ["Published", "ha_host_failures_to_tolerate", "Number of host failures to tolerate before the Pool is declared to be overcommitted"], ["Published", "ha_statefiles", "HA statefile VDIs in use"], ["Published", "ha_configuration", "The current HA configuration"], ["Published", "ha_enabled", "true if HA is enabled on the pool, false otherwise"]], 'msg_changes': [["Published", "ha_failover_plan_exists", "Returns true if a VM failover plan exists for up to 'n' host failures"], ["Published", "ha_compute_max_host_failures_to_tolerate", "Returns the maximum number of host failures we could tolerate before we would be unable to restart configured VMs"], ["Published", "ha_compute_hypothetical_max_host_failures_to_tolerate", "Returns the maximum number of host failures we could tolerate before we would be unable to restart the provided VMs"], ["Published", "ha_compute_vm_failover_plan", "Return a VM failover plan assuming a given subset of hosts fail"], ["Published", "set_ha_host_failures_to_tolerate", "Set the maximum number of host failures to consider in the HA VM restart planner"], ["Published", "create_new_blob", "Create a placeholder for a named binary blob of data that is associated with this pool"]]}, {'cls': 'pool_patch', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'VM', 'obj_changes': [], 'field_changes': [["Published", "blocked_operations", "List of operations which have been explicitly blocked and an error code"], ["Published", "tags", "user-specified tags for categorization purposes"], ["Published", "blobs", "Binary blobs associated with this VM"], ["Published", "transportable_snapshot_id", "Transportable ID of the snapshot VM"], ["Published", "snapshot_time", "Date\/time when this snapshot was created."], ["Published", "snapshots", "List pointing to all the VM snapshots."], ["Published", "snapshot_of", "Ref pointing to the VM this snapshot is of."], ["Published", "is_a_snapshot", "true if this is a snapshot. Snapshotted VMs can never be started, they are used only for cloning other VMs"], ["Published", "ha_restart_priority", "has possible values: \"best-effort\" meaning \"try to restart this VM if possible but don't consider the Pool to be overcommitted if this is not possible\"; \"restart\" meaning \"this VM should be restarted\"; \"\" meaning \"do not try to restart this VM\""], ["Published", "ha_always_run", "if true then the system will attempt to keep the VM running as much as possible."]], 'msg_changes': [["Published", "snapshot", "Snapshots the specified VM, making a new VM. Snapshot automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write)."], ["Published", "snapshot_with_quiesce", "Snapshots the specified VM with quiesce, making a new VM. Snapshot automatically exploits the capabilities of the underlying storage repository in which the VM's disk images are stored (e.g. Copy on Write)."], ["Published", "set_ha_restart_priority", "Set the value of the ha_restart_priority field"], ["Published", "set_ha_always_run", "Set the value of the ha_always_run"], ["Published", "set_memory_static_max", "Set the value of the memory_static_max field"], ["Published", "wait_memory_target_live", "Wait for a running VM to reach its current memory target"], ["Published", "get_data_sources", ""], ["Published", "record_data_source", "Start recording the specified data source"], ["Published", "query_data_source", "Query the latest value of the specified data source"], ["Published", "forget_data_source_archives", "Forget the recorded statistics related to the specified data source"], ["Published", "create_new_blob", "Create a placeholder for a named binary blob of data that is associated with this VM"], ["Published", "assert_agile", "Returns an error if the VM is not considered agile e.g. because it is tied to a resource local to a host"], ["Published", "set_protection_policy", "Set the value of the protection_policy field"]]}, {'cls': 'VM_metrics', 'obj_changes': [], 'field_changes': [["Published", "other_config", "additional configuration"]], 'msg_changes': []}, {'cls': 'VM_guest_metrics', 'obj_changes': [], 'field_changes': [["Published", "live", "True if the guest is sending heartbeat messages via the guest agent"], ["Published", "other_config", "additional configuration"], ["Removed", "disks", "No data"]], 'msg_changes': []}, {'cls': 'VMPP', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'VM_appliance', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'DR_task', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'host', 'obj_changes': [], 'field_changes': [["Published", "tags", "user-specified tags for categorization purposes"], ["Published", "blobs", "Binary blobs associated with this host"], ["Published", "ha_network_peers", "The set of hosts visible via the network from this host"], ["Published", "ha_statefiles", "The set of statefiles accessible from this host"]], 'msg_changes': [["Published", "power_on", "Attempt to power-on the host (if the capability exists)."], ["Published", "emergency_ha_disable", "This call disables HA on the local host. This should only be used with extreme care."], ["Published", "get_data_sources", ""], ["Published", "record_data_source", "Start recording the specified data source"], ["Published", "query_data_source", "Query the latest value of the specified data source"], ["Published", "forget_data_source_archives", "Forget the recorded statistics related to the specified data source"], ["Published", "get_vms_which_prevent_evacuation", "Return a set of VMs which prevent the host being evacuated, with per-VM error codes"], ["Published", "shutdown_agent", "Shuts the agent down after a 10 second pause. WARNING: this is a dangerous operation. Any operations in progress will be aborted, and unrecoverable data loss may occur. The caller is responsible for ensuring that there are no operations in progress when this method is called."], ["Published", "compute_free_memory", "Computes the amount of free memory on the host."], ["Published", "sync_data", "This causes the synchronisation of the non-database data (messages, RRDs and so on) stored on the master to be synchronised with the host"], ["Published", "backup_rrds", "This causes the RRDs to be backed up to the master"], ["Published", "create_new_blob", "Create a placeholder for a named binary blob of data that is associated with this host"], ["Published", "call_plugin", "Call a XenAPI plugin on this host"], ["Published", "get_servertime", "This call queries the host's clock for the current time"]]}, {'cls': 'host_crashdump', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'host_patch', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'host_metrics', 'obj_changes': [], 'field_changes': [["Published", "other_config", "additional configuration"]], 'msg_changes': []}, {'cls': 'host_cpu', 'obj_changes': [], 'field_changes': [["Published", "other_config", "additional configuration"]], 'msg_changes': []}, {'cls': 'network', 'obj_changes': [], 'field_changes': [["Published", "tags", "user-specified tags for categorization purposes"], ["Published", "blobs", "Binary blobs associated with this network"]], 'msg_changes': [["Published", "create_new_blob", "Create a placeholder for a named binary blob of data that is associated with this pool"]]}, {'cls': 'VIF', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'VIF_metrics', 'obj_changes': [], 'field_changes': [["Published", "other_config", "additional configuration"]], 'msg_changes': []}, {'cls': 'PIF', 'obj_changes': [], 'field_changes': [["Published", "disallow_unplug", "Prevent this PIF from being unplugged; set this to notify the management tool-stack that the PIF has a special use and should not be unplugged under any circumstances (e.g. because you're running storage traffic over it)"]], 'msg_changes': [["Published", "db_introduce", "Create a new PIF record in the database only"], ["Published", "db_forget", "Destroy a PIF database record."]]}, {'cls': 'PIF_metrics', 'obj_changes': [], 'field_changes': [["Published", "other_config", "additional configuration"]], 'msg_changes': []}, {'cls': 'Bond', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'VLAN', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'SM', 'obj_changes': [], 'field_changes': [["Published", "driver_filename", "filename of the storage driver"]], 'msg_changes': []}, {'cls': 'SR', 'obj_changes': [], 'field_changes': [["Published", "blobs", "Binary blobs associated with this SR"], ["Published", "tags", "user-specified tags for categorization purposes"]], 'msg_changes': [["Published", "create_new_blob", "Create a placeholder for a named binary blob of data that is associated with this SR"], ["Published", "assert_can_host_ha_statefile", "Returns successfully if the given SR can host an HA statefile. Otherwise returns an error to explain why not"]]}, {'cls': 'VDI', 'obj_changes': [], 'field_changes': [["Published", "tags", "user-specified tags for categorization purposes"], ["Published", "snapshot_time", "Date\/time when this snapshot was created."], ["Published", "snapshots", "List pointing to all the VDIs snapshots."], ["Published", "snapshot_of", "Ref pointing to the VDI this snapshot is of."], ["Published", "is_a_snapshot", "true if this is a snapshot."]], 'msg_changes': []}, {'cls': 'VBD', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'VBD_metrics', 'obj_changes': [], 'field_changes': [["Published", "other_config", "additional configuration"]], 'msg_changes': []}, {'cls': 'PBD', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'crashdump', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'VTPM', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'console', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'user', 'obj_changes': [], 'field_changes': [["Published", "other_config", "additional configuration"]], 'msg_changes': []}, {'cls': 'data_source', 'obj_changes': [["Published", "data_source", "Data sources for logging in RRDs"]], 'field_changes': [], 'msg_changes': []}, {'cls': 'blob', 'obj_changes': [["Published", "blob", "A placeholder for a binary blob"]], 'field_changes': [], 'msg_changes': [["Published", "create", "Create a placeholder for a binary blob"], ["Published", "destroy", ""]]}, {'cls': 'message', 'obj_changes': [["Published", "message", "An message for the attention of the administrator"]], 'field_changes': [], 'msg_changes': [["Published", "create", ""], ["Published", "destroy", ""], ["Published", "get", ""], ["Published", "get_all", ""], ["Published", "get_since", ""], ["Published", "get_record", ""], ["Published", "get_by_uuid", ""], ["Published", "get_all_records", ""], ["Published", "get_all_records_where", ""]]}, {'cls': 'secret', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'tunnel', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'PCI', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'PGPU', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'GPU_group', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'VGPU', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'VGPU_type', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}]