release_info = [{'cls': 'session', 'obj_changes': [], 'field_changes': [["Published", "other_config", "additional configuration"]], 'msg_changes': [["Published", "slave_local_login_with_password", "Authenticate locally against a slave in emergency mode. Note the resulting sessions are only good for use on this host."], ["Published", "local_logout", "Log out of local session."]]}, {'cls': 'auth', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'subject', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'role', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'task', 'obj_changes': [], 'field_changes': [["Published", "other_config", "additional configuration"]], 'msg_changes': []}, {'cls': 'event', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'pool', 'obj_changes': [], 'field_changes': [], 'msg_changes': [["Published", "enable_ha", "Turn on High Availability mode"], ["Published", "disable_ha", "Turn off High Availability mode"], ["Published", "designate_new_master", "Perform an orderly handover of the role of master to the referenced host."]]}, {'cls': 'pool_patch', 'obj_changes': [["Published", "pool_patch", "Pool-wide patches"]], 'field_changes': [["Published", "other_config", "additional configuration"], ["Published", "after_apply_guidance", "What the client should do after this patch has been applied."], ["Published", "host_patches", "This hosts this patch is applied to."], ["Published", "pool_applied", "This patch should be applied across the entire pool"], ["Published", "size", "Size of the patch"], ["Published", "version", "Patch version number"]], 'msg_changes': [["Published", "apply", "Apply the selected patch to a host and return its output"], ["Published", "pool_apply", "Apply the selected patch to all hosts in the pool and return a map of host_ref -> patch output"], ["Published", "precheck", "Execute the precheck stage of the selected patch on a host and return its output"], ["Published", "clean", "Removes the patch's files from the server"], ["Published", "destroy", "Removes the patch's files from all hosts in the pool, and removes the database entries.  Only works on unapplied patches."]]}, {'cls': 'VM', 'obj_changes': [], 'field_changes': [["Published", "xenstore_data", "data to be inserted into the xenstore tree (\/local\/domain\/<domid>\/vm-data) after the VM is created."], ["Published", "last_booted_record", "marshalled value containing VM record at time of last boot, updated dynamically to reflect the runtime state of the domain"], ["Published", "HVM_shadow_multiplier", "multiplier applied to the amount of shadow that will be made available to the guest"]], 'msg_changes': [["Published", "maximise_memory", "Returns the maximum amount of guest memory which will fit, together with overheads, in the supplied amount of physical memory. If 'exact' is true then an exact calculation is performed using the VM's current settings. If 'exact' is false then a more conservative approximation is used"]]}, {'cls': 'VM_metrics', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'VM_guest_metrics', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'VMPP', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'VM_appliance', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'DR_task', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'host', 'obj_changes': [], 'field_changes': [], 'msg_changes': [["Published", "assert_can_evacuate", "Check this host can be evacuated."], ["Published", "evacuate", "Migrate all VMs off of this host, where possible."], ["Published", "syslog_reconfigure", "Re-configure syslog logging"], ["Published", "management_reconfigure", "Reconfigure the management network interface"], ["Published", "local_management_reconfigure", "Reconfigure the management network interface. Should only be used if Host.management_reconfigure is impossible because the network configuration is broken."], ["Published", "management_disable", "Disable the management network interface"], ["Published", "get_system_status_capabilities", ""], ["Published", "set_hostname_live", "Sets the host name to the specified string.  Both the API and lower-level system hostname are changed immediately."]]}, {'cls': 'host_crashdump', 'obj_changes': [], 'field_changes': [["Published", "other_config", "additional configuration"]], 'msg_changes': []}, {'cls': 'host_patch', 'obj_changes': [], 'field_changes': [["Published", "other_config", "additional configuration"], ["Published", "pool_patch", "The patch applied"]], 'msg_changes': [["Deprecated", "destroy", ""], ["Deprecated", "apply", ""]]}, {'cls': 'host_metrics', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'host_cpu', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'network', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'VIF', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'VIF_metrics', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'PIF', 'obj_changes': [], 'field_changes': [["Published", "other_config", "Additional configuration"], ["Published", "management", "Indicates whether the control software is listening for connections on this interface"], ["Published", "VLAN_slave_of", "Indicates which VLANs this interface transmits tagged traffic to"], ["Published", "VLAN_master_of", "Indicates wich VLAN this interface receives untagged traffic from"], ["Published", "bond_master_of", "Indicates this PIF represents the results of a bond"], ["Published", "bond_slave_of", "Indicates which bond this interface is part of"], ["Published", "DNS", "IP address of DNS servers to use"], ["Published", "gateway", "IP gateway"], ["Published", "netmask", "IP netmask"], ["Published", "IP", "IP address"], ["Published", "ip_configuration_mode", "Sets if and how this interface gets an IP address"], ["Published", "currently_attached", "true if this interface is online"], ["Published", "physical", "true if this represents a physical network interface"]], 'msg_changes': [["Deprecated", "create_VLAN", "Replaced by VLAN.create"], ["Deprecated", "destroy", "Replaced by VLAN.destroy and Bond.destroy"], ["Published", "reconfigure_ip", "Reconfigure the IP address settings for this interface"], ["Published", "scan", "Scan for physical interfaces on a host and create PIF objects to represent them"], ["Published", "introduce", "Create a PIF object matching a particular network interface"], ["Published", "forget", "Destroy the PIF object matching a particular network interface"], ["Published", "unplug", "Attempt to bring down a physical interface"], ["Published", "plug", "Attempt to bring up a physical interface"]]}, {'cls': 'PIF_metrics', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'Bond', 'obj_changes': [["Published", "Bond", ""]], 'field_changes': [["Published", "other_config", "additional configuration"], ["Published", "slaves", "The interfaces which are part of this bond"], ["Published", "master", "The bonded interface"]], 'msg_changes': [["Published", "create", "Create an interface bond"], ["Published", "destroy", "Destroy an interface bond"]]}, {'cls': 'VLAN', 'obj_changes': [["Published", "VLAN", "A VLAN mux\/demux"]], 'field_changes': [["Published", "other_config", "additional configuration"], ["Published", "tag", "VLAN tag in use"], ["Published", "untagged_PIF", "interface on which traffic is untagged"], ["Published", "tagged_PIF", "interface on which traffic is tagged"]], 'msg_changes': [["Published", "create", "Create a VLAN mux\/demuxer"], ["Published", "destroy", "Destroy a VLAN mux\/demuxer"]]}, {'cls': 'SM', 'obj_changes': [], 'field_changes': [["Published", "other_config", "additional configuration"]], 'msg_changes': []}, {'cls': 'SR', 'obj_changes': [], 'field_changes': [["Published", "sm_config", "SM dependent data"]], 'msg_changes': [["Deprecated", "make", "Use SR.create instead"], ["Published", "probe", "Perform a backend-specific scan, using the given device_config.  If the device_config is complete, then this will return a list of the SRs present of this type on the device, if any.  If the device_config is partial, then a backend-specific scan will be performed, returning results that will guide the user in improving the device_config."], ["Published", "set_physical_size", "Sets the SR's physical_size field"], ["Published", "set_virtual_allocation", "Sets the SR's virtual_allocation field"], ["Published", "set_physical_utilisation", "Sets the SR's physical_utilisation field"]]}, {'cls': 'VDI', 'obj_changes': [], 'field_changes': [["Published", "sm_config", "SM dependent data"], ["Published", "xenstore_data", "data to be inserted into the xenstore tree (\/local\/domain\/0\/backend\/vbd\/<domid>\/<device-id>\/sm-data) after the VDI is attached. This is generally set by the SM backends on vdi_attach."], ["Published", "location", "location information"]], 'msg_changes': [["Published", "introduce", "Create a new VDI record in the database only"], ["Published", "db_forget", "Removes a VDI record from the database"], ["Published", "set_missing", "Sets the VDI's missing field"], ["Published", "set_virtual_size", "Sets the VDI's virtual_size field"], ["Published", "set_physical_utilisation", "Sets the VDI's physical_utilisation field"]]}, {'cls': 'VBD', 'obj_changes': [], 'field_changes': [["Published", "unpluggable", "true if this VBD will support hot-unplug"]], 'msg_changes': []}, {'cls': 'VBD_metrics', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'PBD', 'obj_changes': [], 'field_changes': [["Published", "other_config", "additional configuration"]], 'msg_changes': [["Published", "set_device_config", "Sets the PBD's device_config field"]]}, {'cls': 'crashdump', 'obj_changes': [], 'field_changes': [["Published", "other_config", "additional configuration"]], 'msg_changes': []}, {'cls': 'VTPM', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'console', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'user', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'data_source', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'blob', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'message', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'secret', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'tunnel', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'PCI', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'PGPU', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'GPU_group', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'VGPU', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}, {'cls': 'VGPU_type', 'obj_changes': [], 'field_changes': [], 'msg_changes': []}]